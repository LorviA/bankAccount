{
  "openapi": "3.0.4",
  "info": {
    "title": "Bank API",
    "version": "v1"
  },
  "paths": {
    "/All": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get All Account",
        "responses": {
          "200": {
            "description": "Returns List[account]",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountIEnumerableMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountIEnumerableMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountIEnumerableMbResult"
                }
              }
            }
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get one account for id",
        "operationId": "GetAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id return account",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns account",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "404": {
            "description": "No accounts found for ID:",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MbError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MbError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MbError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Delete account with id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id delete account",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deletion"
          },
          "404": {
            "description": "No accounts found for ID",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              }
            }
          }
        }
      }
    },
    "/ByOwner": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get one account for owner id",
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "description": "OwnerId return account",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns account",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountIEnumerableMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountIEnumerableMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountIEnumerableMbResult"
                }
              }
            }
          },
          "404": {
            "description": "No accounts found for owner ID:",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}/statement": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Receives an account statement from startDate to endDate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id account for statement",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The initial date of the account statement",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date of the account statement",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns List[Transaction]",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionIEnumerableMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionIEnumerableMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionIEnumerableMbResult"
                }
              }
            }
          },
          "404": {
            "description": "No accounts found for ID:",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              }
            }
          }
        }
      }
    },
    "/accounts": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Creates a new bank account",
        "requestBody": {
          "description": "Account details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMbResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              }
            }
          },
          "200": {
            "description": "Returns the created account"
          },
          "421": {
            "description": "If validation fails"
          }
        }
      }
    },
    "/update": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "account modified",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id account being modified",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Account details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the created account",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMbResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMbResult"
                }
              }
            }
          },
          "421": {
            "description": "If validation fails"
          }
        }
      }
    },
    "/accounts/{id}/transactions": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "creating an account transaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "account id for adding a transaction",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Transaction details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the modified account"
          },
          "421": {
            "description": "If validation fails"
          }
        }
      }
    },
    "/transfers": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "creating an account transfer",
        "requestBody": {
          "description": "Transfer details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the modified account"
          },
          "421": {
            "description": "If validation fails"
          }
        }
      }
    },
    "/userinfo": {
      "get": {
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/AccountType"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "interestRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "openingDate": {
            "type": "string",
            "format": "date-time"
          },
          "closeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountIEnumerableMbResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "description": "Успешность выполнения операции",
            "readOnly": true
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            },
            "description": "Результат операции (только при успехе)",
            "nullable": true,
            "readOnly": true
          },
          "error": {
            "$ref": "#/components/schemas/MbError"
          }
        },
        "additionalProperties": false,
        "description": "Результат операции, содержащий либо значение, либо ошибку"
      },
      "AccountMbResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "description": "Успешность выполнения операции",
            "readOnly": true
          },
          "value": {
            "$ref": "#/components/schemas/Account"
          },
          "error": {
            "$ref": "#/components/schemas/MbError"
          }
        },
        "additionalProperties": false,
        "description": "Результат операции, содержащий либо значение, либо ошибку"
      },
      "AccountType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "CreateAccountDto": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "description": "Identifier of the account owner (user)",
            "format": "uuid",
            "example": "a8a110d5-fc49-43c5-bf46-802a8e92d966"
          },
          "type": {
            "$ref": "#/components/schemas/AccountType"
          },
          "balance": {
            "type": "number",
            "description": "Current account balance.",
            "format": "double",
            "nullable": true,
            "example": 1500,75
          },
          "currency": {
            "type": "string",
            "description": "Currency code according to ISO 4217 standard",
            "nullable": true,
            "example": "USD"
          },
          "interestRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "openingDate": {
            "type": "string",
            "format": "date-time"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTransactionDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Identifier of the account owner (user)",
            "format": "uuid",
            "example": "a8a110d5-fc49-43c5-bf46-802a8e92d966"
          },
          "amount": {
            "type": "number",
            "description": "The transaction amount must be greater than 0",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "Currency code according to ISO 4217 standard",
            "nullable": true,
            "example": "USD"
          },
          "type": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "description": {
            "type": "string",
            "description": "max length 300",
            "nullable": true
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateTransferDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Identifier of the account owner (user)",
            "format": "uuid",
            "example": "a8a110d5-fc49-43c5-bf46-802a8e92d966"
          },
          "counterpartyAccountId": {
            "type": "string",
            "description": "The identifier of the counterparty's (user's) account holder",
            "format": "uuid",
            "example": "a8a110d5-fc49-43c5-bf46-802a8e92d966"
          },
          "amount": {
            "type": "number",
            "description": "The transaction amount must be greater than 0",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "Currency code according to ISO 4217 standard",
            "nullable": true,
            "example": "USD"
          },
          "type": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "description": {
            "type": "string",
            "description": "max length 300",
            "nullable": true
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MbError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "HTTP статус код ошибки",
            "format": "int32",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "description": "Сообщение об ошибке",
            "nullable": true,
            "readOnly": true
          },
          "validationErrors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Детали ошибок валидации (ключ - имя поля)",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Информация об ошибке"
      },
      "ObjectMbResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "description": "Успешность выполнения операции",
            "readOnly": true
          },
          "value": {
            "description": "Результат операции (только при успехе)",
            "nullable": true,
            "readOnly": true
          },
          "error": {
            "$ref": "#/components/schemas/MbError"
          }
        },
        "additionalProperties": false,
        "description": "Результат операции, содержащий либо значение, либо ошибку"
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the transaction",
            "format": "uuid",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "accountId": {
            "type": "string",
            "description": "Identifier of the account owner (user)",
            "format": "uuid",
            "example": "a8a110d5-fc49-43c5-bf46-802a8e92d966"
          },
          "counterpartyAccountId": {
            "type": "string",
            "description": "The identifier of the counterparty's (user's) account holder",
            "format": "uuid",
            "example": "a8a110d5-fc49-43c5-bf46-802a8e92d966"
          },
          "amount": {
            "type": "number",
            "description": "The transaction amount must be greater than 0",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "Currency code according to ISO 4217 standard",
            "nullable": true,
            "example": "USD"
          },
          "type": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "description": {
            "type": "string",
            "description": "max length 300",
            "nullable": true
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TransactionIEnumerableMbResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "description": "Успешность выполнения операции",
            "readOnly": true
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            },
            "description": "Результат операции (только при успехе)",
            "nullable": true,
            "readOnly": true
          },
          "error": {
            "$ref": "#/components/schemas/MbError"
          }
        },
        "additionalProperties": false,
        "description": "Результат операции, содержащий либо значение, либо ошибку"
      },
      "TransactionType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "UpdateAccountDto": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "description": "Identifier of the account owner (user)",
            "format": "uuid",
            "example": "a8a110d5-fc49-43c5-bf46-802a8e92d966"
          },
          "type": {
            "$ref": "#/components/schemas/AccountType"
          },
          "balance": {
            "type": "number",
            "description": "Current account balance.",
            "format": "double",
            "nullable": true,
            "example": 1500,75
          },
          "currency": {
            "type": "string",
            "description": "Currency code according to ISO 4217 standard",
            "nullable": true,
            "example": "USD"
          },
          "interestRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "closeDate": {
            "type": "string",
            "description": "Date when the account was closed (null if active)",
            "format": "date-time",
            "nullable": true,
            "example": "2025-12-31T23:59:59Z"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            },
            "description": "List of transactions associated with this account",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}